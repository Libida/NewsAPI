!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";n.r(t);n(0);const s="news-categories",i="news-container",r="global-spinner",o="modal",c="modal-text",a="modal-heading-close",l="backdrop",d="hidden";class h{constructor(){this.spinner=document.getElementById(r)}show(){this.spinner.classList.remove(d)}hide(){this.spinner.classList.add(d)}}class u{constructor(e){this.view=e}startLoading(e,t){e&&e(),this.view.show(),t&&t()}finishLoading(e,t){e&&e(),this.view.hide(),t&&t()}}let w;class p{constructor(){return w||((w=this).view=new h,w.controller=new u(w.view)),w}}class v{constructor(e){this.id=e,this.dropdown=document.getElementById(e)}}class f{constructor(e,t){this.view=e,this.addListeners(t)}addListeners(e={}){const{changeCallback:t}=e;t&&this.view.dropdown.addEventListener("change",t)}}class m{constructor(e,t){this.view=new v(e),this.controller=new f(this.view,t)}}const g="https://static.thenounproject.com/png/340719-200.png";function y(e){const{url:t,urlToImage:n,title:s,description:i}=e;return`\n            <article class="news-article">\n                <a class="news-article-link" href="${t}" target="_blank">\n                    <div class="news-article-additional-content">\n                        <img class="news-article-img" src="${n||g}" alt="${s}">\n                    </div>\n                    <div class="news-article-main-content">\n                        <h3 class="news-article-title">${s}</h3>\n                        <p class="news-article-location">${i}</p>\n                    </div>\n                </a>\n            </article>\n            `}class b{constructor(){this.container=document.getElementById(i),this.dropdown=new m(s),this.spinner=new p}appendNews(e){for(let t in e)this.container.insertAdjacentHTML("beforeend",y(e[t]))}clearNews(){this.container.innerHTML=""}startLoading(){this.spinner.controller.startLoading(this.clearNews.bind(this))}finishLoading(){this.spinner.controller.finishLoading()}}class L{constructor(e,t,n={}){this.model=e,this.view=t,this.addListeners()}addListeners(){this.view.dropdown.controller.addListeners({changeCallback:this.updateNews.bind(this)})}async updateNews(e){this.view.startLoading();const t=this.model.getNews(e.target.value,{withLogging:!0,method:"GET"}),n=await t||{};this.view.appendNews(n.articles),this.view.finishLoading()}}class ${constructor(){this.create(),this.backdrop=document.getElementById(l)}create(){document.body.insertAdjacentHTML("beforeend",`<div class="backdrop ${d}" id="${l}"></div>`)}}class x{constructor(e){this.view=e}show(){this.view.backdrop.classList.remove(d)}hide(){this.view.backdrop.classList.add(d)}}let k=null;class E{constructor(e){return k||((k=this).view=new $,k.controller=new x(k.view)),k}}class j{constructor(e){this.create(),this.modal=document.getElementById(o),this.errorText=document.getElementById(c),this.errorClose=document.getElementById(a),this.backdrop=new E}create(){document.body.insertAdjacentHTML("beforeend",`\n                <div class="modal ${d}" id="${o}">\n                    <div class="modal-heading">\n                        <h2>Attention</h2>\n                        <a href="#" class="${a}" id="${a}">Close</a>\n                    </div>\n                    <p class="modal-text" id="${c}"></p>\n                </div>\n                `)}setText(e="Could you please retry later."){this.text!==e&&(this.errorText.textContent=e,this.text=e)}}class T{constructor(e){this.view=e,this.initListeners()}initListeners(){this.view.errorClose.addEventListener("click",this.close.bind(this))}open(){this.view.modal.classList.remove(d),this.view.backdrop.controller.show()}close(e){e.preventDefault(),this.view.modal.classList.add(d),this.view.backdrop.controller.hide()}}let I=null;class N{constructor(e){return I||((I=this).view=new j,I.controller=new T(I.view)),I.view.setText(e),I.controller.open(),I}}const B=function(e={},t){if(e.withLogging){console.info("----------------------------------------------------");for(let n in e)console.info(`${t}${n}: ${e[n]}`);console.info("----------------------------------------------------")}};let M=1;class q{constructor(e={}){this.id=M++,this.promiseRequest=this.makeRequest(e)}async makeRequest(e){return new Proxy(fetch,{apply:(e,t,n)=>(B(n[1],`Fetch â„–${this.id} `),e.apply(t,n))})(e.url,e)}async waitForRequest(e){try{let t=await this.promiseRequest;return e?e(t):t}catch(e){new N(e)}}}class C{async getNews(e,t){return t.url=`https://newsapi.org/v2/everything?q=${e}&sortBy=popularity&apiKey=a1e2ae38e5ff42f1aa3175998837d6ca&from=2019-10-24&to=2019-10-24`,new q(t).waitForRequest(this.handleErrors.bind(this))}handleErrors(e){if(200!=e.status)throw new SyntaxError("Empty results from the NEWS API server");return e.json()}}new class{constructor(e){this.model=new C,this.view=new b,this.controller=new L(this.model,this.view,e)}}}]);